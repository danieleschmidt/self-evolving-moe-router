{
  "name": "Self-Evolving MoE-Router Development",
  "dockerFile": "Dockerfile",
  "context": "..",
  
  // Configure tool-specific properties
  "customizations": {
    "vscode": {
      "settings": {
        "python.defaultInterpreterPath": "/opt/conda/bin/python",
        "python.linting.enabled": true,
        "python.linting.pylintEnabled": false,
        "python.linting.flake8Enabled": true,
        "python.linting.mypyEnabled": true,
        "python.formatting.provider": "black",
        "python.formatting.blackArgs": ["--line-length=88"],
        "python.sortImports.args": ["--profile", "black"],
        "python.testing.pytestEnabled": true,
        "python.testing.unittestEnabled": false,
        "python.testing.pytestArgs": ["tests"],
        "editor.formatOnSave": true,
        "editor.rulers": [88],
        "editor.tabSize": 4,
        "editor.insertSpaces": true,
        "files.trimTrailingWhitespace": true,
        "files.insertFinalNewline": true,
        "git.autofetch": true,
        "terminal.integrated.shell.linux": "/bin/bash"
      },
      
      "extensions": [
        "ms-python.python",
        "ms-python.vscode-pylance",
        "ms-python.black-formatter",
        "ms-python.isort",
        "ms-python.flake8",
        "ms-python.mypy-type-checker",
        "ms-toolsai.jupyter",
        "GitHub.copilot",
        "GitHub.copilot-chat",
        "ms-vscode.vscode-json",
        "redhat.vscode-yaml",
        "ms-vscode.vscode-markdown",
        "ms-vscode-remote.remote-containers",
        "eamodio.gitlens",
        "ms-vscode.makefile-tools",
        "ms-azuretools.vscode-docker",
        "charliermarsh.ruff"
      ]
    }
  },
  
  // Use 'forwardPorts' to make a list of ports inside the container available locally
  "forwardPorts": [8080, 6006, 8888],
  "portsAttributes": {
    "8080": {
      "label": "Evolution Dashboard",
      "onAutoForward": "notify"
    },
    "6006": {
      "label": "TensorBoard",
      "onAutoForward": "notify"
    },
    "8888": {
      "label": "Jupyter Lab",
      "onAutoForward": "notify"
    }
  },
  
  // Set container-specific settings
  "containerEnv": {
    "PYTHONPATH": "/workspace/src",
    "CUDA_VISIBLE_DEVICES": "0",
    "WANDB_CACHE_DIR": "/workspace/.cache/wandb",
    "HF_HOME": "/workspace/.cache/huggingface",
    "TORCH_HOME": "/workspace/.cache/torch"
  },
  
  // Configure mounted volumes for persistent data
  "mounts": [
    "source=${localWorkspaceFolder}/.cache,target=/workspace/.cache,type=bind,consistency=cached",
    "source=${localWorkspaceFolder}/data,target=/workspace/data,type=bind,consistency=cached"
  ],
  
  // Use 'onCreateCommand' to run commands when creating the container
  "onCreateCommand": [
    "pip", "install", "-e", ".[dev,viz,distributed,benchmark]"
  ],
  
  // Use 'postCreateCommand' to run commands after the container is created
  "postCreateCommand": [
    "bash", "-c", "pre-commit install && python -c 'import torch; print(f\"PyTorch: {torch.__version__}, CUDA: {torch.cuda.is_available()}\")'",
    "mkdir -p .cache/wandb .cache/huggingface .cache/torch data/datasets data/models data/experiments"
  ],
  
  // Use 'postStartCommand' to run commands after the container starts
  "postStartCommand": "git config --global --add safe.directory /workspace",
  
  // Configure the shell  
  "remoteUser": "root",
  "workspaceMount": "source=${localWorkspaceFolder},target=/workspace,type=bind,consistency=cached",
  "workspaceFolder": "/workspace",
  
  // Enable GPU support if available
  "runArgs": [
    "--gpus=all",
    "--shm-size=16g",
    "--ipc=host"
  ],
  
  // Development convenience features
  "features": {
    "ghcr.io/devcontainers/features/git:1": {},
    "ghcr.io/devcontainers/features/github-cli:1": {},
    "ghcr.io/devcontainers/features/docker-in-docker:2": {}
  }
}