# Pre-commit configuration for Self-Evolving MoE-Router
# Install with: pre-commit install
# Run manually with: pre-commit run --all-files

repos:
  # Standard pre-commit hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      - id: trailing-whitespace
        args: [--markdown-linebreak-ext=md]
      - id: end-of-file-fixer
      - id: check-yaml
        args: [--allow-multiple-documents]
      - id: check-json
      - id: check-toml
      - id: check-xml
      - id: check-merge-conflict
      - id: check-case-conflict
      - id: check-docstring-first
      - id: check-executables-have-shebangs
      - id: check-shebang-scripts-are-executable
      - id: check-symlinks
      - id: destroyed-symlinks
      - id: fix-byte-order-marker
      - id: mixed-line-ending
        args: [--fix=lf]
      - id: check-added-large-files
        args: [--maxkb=10000]  # 10MB limit
      - id: debug-statements
      - id: name-tests-test
        args: [--pytest-test-first]

  # Python code formatting with Black
  - repo: https://github.com/psf/black
    rev: 23.7.0
    hooks:
      - id: black
        args: [--line-length=88]
        language_version: python3

  # Import sorting with isort
  - repo: https://github.com/pycqa/isort
    rev: 5.12.0
    hooks:
      - id: isort
        args: [--profile, black, --line-length=88]

  # Linting with Ruff (replaces flake8, pycodestyle, pyflakes, etc.)
  - repo: https://github.com/charliermarsh/ruff-pre-commit
    rev: v0.0.284
    hooks:
      - id: ruff
        args: [--fix, --exit-non-zero-on-fix]

  # Type checking with mypy
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.5.1
    hooks:
      - id: mypy
        additional_dependencies: [
          types-PyYAML,
          types-requests,
          types-setuptools,
          torch,
          numpy
        ]
        args: [--ignore-missing-imports, --show-error-codes]
        exclude: ^(tests/|examples/|docs/)

  # Security linting with bandit
  - repo: https://github.com/pycqa/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        args: [-r, src/]
        exclude: ^tests/

  # Dependency security scanning
  - repo: https://github.com/pypa/pip-audit
    rev: v2.6.1
    hooks:
      - id: pip-audit
        args: [--desc, --disable-pip]

  # Docstring checking
  - repo: https://github.com/pycqa/pydocstyle
    rev: 6.3.0
    hooks:
      - id: pydocstyle
        args: [--convention=google]
        exclude: ^(tests/|examples/)

  # YAML formatting
  - repo: https://github.com/macisamuele/language-formatters-pre-commit-hooks
    rev: v2.10.0
    hooks:
      - id: pretty-format-yaml
        args: [--autofix, --indent, "2"]

  # Markdown linting
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.35.0
    hooks:
      - id: markdownlint
        args: [--fix]

  # Shell script linting
  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.9.0.5
    hooks:
      - id: shellcheck

  # Dockerfile linting
  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint-docker
        args: [--ignore, DL3008, --ignore, DL3009]

  # Jupyter notebook cleaning
  - repo: https://github.com/kynan/nbstripout
    rev: 0.6.1
    hooks:
      - id: nbstripout

  # Git commit message linting
  - repo: https://github.com/commitizen-tools/commitizen
    rev: 3.7.0
    hooks:
      - id: commitizen
        stages: [commit-msg]

# Global configuration
default_language_version:
  python: python3.9

default_stages: [commit, push]

# Exclude patterns
exclude: |
  (?x)^(
      \.git/|
      \.pytest_cache/|
      \.mypy_cache/|
      \.ruff_cache/|
      __pycache__/|
      \.venv/|
      venv/|
      build/|
      dist/|
      \.eggs/|
      .*\.egg-info/|
      logs/|
      data/|
      models/|
      checkpoints/|
      wandb/|
      \.cache/|
      experiments/|
      results/
  )

# Fail fast - stop running hooks after first failure
fail_fast: false

# Minimum pre-commit version
minimum_pre_commit_version: 3.0.0