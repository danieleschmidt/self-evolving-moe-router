version: '3.8'

services:
  terragon-nextgen-server:
    build:
      context: ..
      dockerfile: deployment/Dockerfile.nextgen
    container_name: terragon-nextgen-evolution
    ports:
      - "8000:8000"
      - "8001:8001"  # Monitoring dashboard port
    environment:
      - PYTHONPATH=/app/src
      - LOG_LEVEL=info
      - MONITORING_ENABLED=true
      - QUANTUM_ENABLED=true
      - DISTRIBUTED_ENABLED=false  # Single node by default
      - ADAPTIVE_MUTATIONS_ENABLED=true
      - AUTO_TUNING_ENABLED=true
      - MAX_WORKERS=4
      - CACHE_SIZE=1000
    volumes:
      - ../evolution_results:/app/evolution_results
      - ../quality_gates_results:/app/quality_gates_results
      - ./monitoring/logs:/app/logs
    networks:
      - terragon-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          cpus: '4.0'
          memory: 8G
        reservations:
          cpus: '2.0'
          memory: 4G

  terragon-monitoring:
    image: prom/prometheus:latest
    container_name: terragon-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - terragon-network
    restart: unless-stopped

  terragon-grafana:
    image: grafana/grafana:latest
    container_name: terragon-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=terragon2024
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
    networks:
      - terragon-network
    restart: unless-stopped
    depends_on:
      - terragon-monitoring

  terragon-redis:
    image: redis:7-alpine
    container_name: terragon-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    networks:
      - terragon-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 2G

  terragon-load-balancer:
    image: nginx:alpine
    container_name: terragon-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    networks:
      - terragon-network
    restart: unless-stopped
    depends_on:
      - terragon-nextgen-server

  # Distributed node replicas (for multi-node consensus testing)
  terragon-node-2:
    build:
      context: ..
      dockerfile: deployment/Dockerfile.nextgen
    container_name: terragon-node-2
    ports:
      - "8002:8000"
    environment:
      - PYTHONPATH=/app/src
      - LOG_LEVEL=info
      - NODE_ID=node_2
      - TOTAL_NODES=3
      - DISTRIBUTED_ENABLED=true
      - CONSENSUS_TYPE=byzantine_fault_tolerant
      - MONITORING_ENABLED=true
      - QUANTUM_ENABLED=true
      - ADAPTIVE_MUTATIONS_ENABLED=true
    volumes:
      - ../evolution_results:/app/evolution_results
      - ./monitoring/logs:/app/logs
    networks:
      - terragon-network
    restart: unless-stopped
    profiles:
      - distributed

  terragon-node-3:
    build:
      context: ..
      dockerfile: deployment/Dockerfile.nextgen
    container_name: terragon-node-3
    ports:
      - "8003:8000"
    environment:
      - PYTHONPATH=/app/src
      - LOG_LEVEL=info
      - NODE_ID=node_3
      - TOTAL_NODES=3
      - DISTRIBUTED_ENABLED=true
      - CONSENSUS_TYPE=byzantine_fault_tolerant
      - MONITORING_ENABLED=true
      - QUANTUM_ENABLED=true
      - ADAPTIVE_MUTATIONS_ENABLED=true
    volumes:
      - ../evolution_results:/app/evolution_results
      - ./monitoring/logs:/app/logs
    networks:
      - terragon-network
    restart: unless-stopped
    profiles:
      - distributed

networks:
  terragon-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  prometheus-data:
    driver: local
  grafana-data:
    driver: local
  redis-data:
    driver: local