# TERRAGON Kubernetes ConfigMap
# Self-Evolving MoE-Router Production Configuration

apiVersion: v1
kind: ConfigMap
metadata:
  name: terragon-config
  namespace: terragon
  labels:
    app: terragon
    component: configuration
data:
  production.json: |
    {
      "environment": "production",
      "logging": {
        "level": "INFO",
        "file": "/app/logs/terragon.log",
        "format": "json",
        "rotation": "daily",
        "retention_days": 30
      },
      "server": {
        "host": "0.0.0.0",
        "port": 8080,
        "workers": 4,
        "max_connections": 1000,
        "keepalive_timeout": 65,
        "graceful_timeout": 30
      },
      "evolution": {
        "population_size": 100,
        "generations": 200,
        "mutation_rate": 0.15,
        "crossover_rate": 0.85,
        "elite_size": 20,
        "parallel_workers": 8,
        "auto_save_interval": 300,
        "checkpoint_interval": 1800,
        "max_evolution_time": 7200,
        "adaptive_parameters": true,
        "multi_objective": true,
        "novelty_search": true
      },
      "routing": {
        "cache_size": 50000,
        "cache_ttl": 3600,
        "load_balancing": true,
        "adaptive_routing": true,
        "route_optimization": true,
        "failure_recovery": true,
        "circuit_breaker": {
          "enabled": true,
          "failure_threshold": 5,
          "recovery_timeout": 60
        }
      },
      "monitoring": {
        "metrics_enabled": true,
        "health_check_interval": 30,
        "performance_logging": true,
        "distributed_tracing": true,
        "prometheus_metrics": true,
        "custom_metrics": [
          "evolution_fitness",
          "routing_latency",
          "expert_utilization",
          "cache_hit_rate"
        ]
      },
      "security": {
        "rate_limiting": {
          "enabled": true,
          "requests_per_minute": 1000,
          "burst_size": 100
        },
        "request_timeout": 30,
        "max_payload_size": 104857600,
        "cors_enabled": true,
        "security_headers": true,
        "input_validation": true
      },
      "database": {
        "connection_pool_size": 20,
        "connection_timeout": 30,
        "query_timeout": 10,
        "retry_attempts": 3,
        "backup_interval": 3600
      },
      "deployment": {
        "cluster_mode": true,
        "auto_scaling": {
          "enabled": true,
          "min_replicas": 3,
          "max_replicas": 10,
          "target_cpu_utilization": 70,
          "target_memory_utilization": 80
        },
        "resource_limits": {
          "cpu_limit": "1000m",
          "memory_limit": "2Gi",
          "cpu_request": "500m",
          "memory_request": "1Gi"
        }
      }
    }
  
  nginx.conf: |
    upstream terragon_backend {
        least_conn;
        server terragon-moe-router-internal:8080 max_fails=3 fail_timeout=30s;
    }
    
    server {
        listen 80;
        server_name _;
        
        # Security headers
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";
        
        # Rate limiting
        limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
        limit_req zone=api burst=20 nodelay;
        
        # Health check endpoint
        location /health {
            proxy_pass http://terragon_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            access_log off;
        }
        
        # Main API endpoints
        location / {
            proxy_pass http://terragon_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts
            proxy_connect_timeout 10s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # Buffer settings
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
        }
    }